package main

import (
	"fmt"
	"os"

	"github.com/charmbracelet/bubbles/list"
	tea "github.com/charmbracelet/bubbletea"
	"github.com/charmbracelet/lipgloss"
	"github.com/louislouislouislouis/repr8ducer/k8s"
)

var DEFAULT_NAMESPACE = "things"

// func main() {
// 	k8sService := k8s.GetService()
// 	//k8sService.ListNamespace()
// 	//k8sService.ListPodsInNamespace(DEFAULT_NAMESPACE)
// 	err := k8sService.Exec()
// 	fmt.Println(err)
// }

var docStyle = lipgloss.NewStyle().Margin(1, 2)
var titleStyle = lipgloss.NewStyle().
	Foreground(lipgloss.Color("#FFFFFF")). // Couleur blanche
	Background(lipgloss.Color("#F0F")).    // Fond bleu
	Bold(true).
	Padding(1, 2)

type item struct {
	title, desc string
	isSelected  bool
}

func (i item) Title() string       { return i.title }
func (i item) Description() string { return i.desc }
func (i item) FilterValue() string { return i.title }
func (i item) IsSelected() bool    { return i.isSelected }

type model struct {
	list list.Model
}

func (m model) Init() tea.Cmd {
	return nil
}

func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.KeyMsg:
		if msg.String() == "ctrl+c" {
			return m, tea.Quit
		}
		if msg.String() == "space" {
			//var item44 = m.list.Items()[m.list.Cursor()].(item)
			cmd := m.list.ToggleSpinner()
			return m, cmd
			//em44.isSelected = true
		}
	case tea.WindowSizeMsg:
		h, v := docStyle.GetFrameSize()
		m.list.SetSize(msg.Width-h, msg.Height-v)
	}

	var cmd tea.Cmd
	m.list, cmd = m.list.Update(msg)
	return m, cmd
}

func (m model) View() string {

	return docStyle.Render(m.list.View())
}

func main() {
	k8sService := k8s.GetService()
	itemss, _ := k8sService.ListNamespace()
	items := []list.Item{}

	for _, o := range itemss.Items {
		newItem := item{
			title: o.Name,            // Utilisez le champ que vous voulez pour le titre
			desc:  o.Status.String(), // Description personnalis√©e
		}
		items = append(items, newItem)
	}

	list := list.New(items, list.NewDefaultDelegate(), 0, 0)
	m := model{list: list}
	m.list.Title = "My Fave Things  fzef"
	m.list.Styles.Title = titleStyle

	p := tea.NewProgram(m, tea.WithAltScreen())

	if _, err := p.Run(); err != nil {
		fmt.Println("Error running program:", err)
		os.Exit(1)
	}
}
